function NR_Burgers_IMEXRKCB4
% Simulate the 1D Burgers on 0<x<L with homogeneous Dirichlet BCs using IMEXRKCB4 in time
% (explicit on nonlinear terms, implicit on linear terms) & 2nd-order central FD in space.

%%%%%%%%%%%%%%%%%%%% Initialize the simulation paramters (user input) %%%%%%%%%%%%%%%%%%%%
L=100; Tmax=50; N=100; dt=0.5; PlotInterval=1;
dx=L/N; x=(0:N)*dx; y=-sin(pi*x/L)-sin(2*pi*x/L)+sin(6*pi*x/L); NR_PlotXY(x,y,0,0,L,-3,3)
%%%%%%%%%%%% Precalculate the time-stepping coefficients used in the simulation %%%%%%%%%%
c = [0,1/4,3/4,3/8,1/2,1];
b = [232049084587/1377130630063,322009889509/2243393849156,-195109672787/1233165545817,-340582416761/705418832319,463396075661/409972144477,323177943294/1626646580633];
a_im = [0,0,0,0,0,0;
    c(2)/2,c(2)/2,0,0,0,0;
    216145252607/961230882893,257479850128/1143310606989,30481561667/101628412017,0,0,0;
    b(1),-381180097479/1276440792700,-54660926949/461115766612,344309628413/552073727558,0,0;
    b(1),b(2),-100836174740/861952129159,-250423827953/1283875864443,1/2,0;
    b];
a_ex = [0,0,0,0,0,0;
    c(2),0,0,0,0,0;
    153985248130/1004999853329,902825336800/1512825644809,0,0,0,0;
    b(1),99316866929/820744730663,82888780751/969573940619,0,0,0;
    b(1),b(2),57501241309/765040883867,76345938311/676824576433,0,0;
    b(1),b(2),b(3),-4099309936455/6310162971841,1395992540491/933264948679,0];
% b_hat = [5590918588/49191225249,92380217342/122399335103,-29257529014/55608238079,-126677396901/66917692409,384446411890/169364936833,58325237543/207682037557];
A = diag(-2*ones(1,N-1)) + diag(1*ones(1,N-2),1) + diag(1*ones(1,N-2),-1);
for k=1:Tmax/dt
    for rk=1:6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ALL RK SUBSTEPS %%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if (rk==1)
            r = y;
            z = y;
        elseif rk<6
            z(2:N) = r(2:N)+(a_im(rk,rk-1)*dt*A*z(2:N)')';
            r(2:N) = (inv(A)*(z(2:N)-r(2:N))'/(a_im(rk,rk-1)*dt))';
            z(2:N) = z(2:N)+a_ex(rk,rk-1)*dt*(-r(2:N).*(r(3:N+1)-r(1:N-1))/2/dx);
            r(2:N) = y(2:N)+((a_im(rk+1,rk-1)-b(rk-1))*dt*A*r(2:N)')'+(a_ex(rk+1,rk-1)-b(rk-1))*dt*(-r(2:N).*(r(3:N+1)-r(1:N-1))/2/dx);
        else
            z(2:N) = r(2:N)+(a_im(rk,rk-1)*dt*A*z(2:N)')'+a_ex(rk,rk-1)*dt*(-r(2:N).*(r(3:N+1)-r(1:N-1))/2/dx);
        end

        z(2:N) = ((eye(size(A))-a_im(rk,rk)*dt*A)\z(2:N)')';
        y(2:N) = y(2:N)+(b(rk)*dt*A*z(2:N)')'+b(rk)*dt*(-z(2:N).*(z(3:N+1)-z(1:N-1))/2/dx);

    end %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% END OF RK LOOP %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    if (mod(k,PlotInterval)==0) NR_PlotXY(x,y,k*dt,0,L,-3,3); end
end
